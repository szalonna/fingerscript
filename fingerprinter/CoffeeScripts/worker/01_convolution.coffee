"use strict"

# kernel ősosztály
class Kernel
	kernel: [
				[-1,-1,-1],
				[-1,-1,-1],
				[-1,-1,-1]
			]

	# adott kernel vizsgálata a megadott mintával
	execute: (data, id) ->
		kern = @kernel[id]
		for x in [0...kern.length]
			row = kern[x]
			for y in [0...row.length]
				if data[x][y] > -1 and row[y] > -1
					if data[x][y] != row[y]
						return false
		return true

	# összes kernel vizsgálata a megadott mintával
	executeAll: (data) ->
		for i in [0...@kernel.length]
			if @execute data,i
				return true
		return false

# szkeletonizálás kernel
class Skeleton extends Kernel
	kernel: [
				[
					[ 0, 0, 0],
					[-1, 1,-1],
					[ 1, 1, 1]
				],[
					[ 1,-1, 0],
					[ 1, 1, 0],
					[ 1,-1, 0]
				],[
					[ 1, 1, 1],
					[-1, 1,-1],
					[ 0, 0, 0]
				],[
					[ 0,-1, 1],
					[ 0, 1, 1],
					[ 0,-1, 1]
				],[
					[-1, 0, 0],
					[ 1, 1, 0],
					[ 1, 1,-1]
				],[
					[ 1, 1,-1],
					[ 1, 1, 0],
					[-1, 0, 0]
				],[
					[-1, 1, 1],
					[ 0, 1, 1],
					[ 0, 0,-1]
				],[
					[ 0, 0,-1],
					[ 0, 1, 1],
					[-1, 1, 1]
				]
			]

# Y-ok detektálása kernel
class Yns extends Kernel
	kernel: [
				[
					[-1, 1, 0],
					[ 0, 1, 1],
					[-1, 1, 0]
				],[
					[-1, 0,-1],
					[ 1, 1, 1],
					[ 0, 1, 0]
				],[
					[ 0, 1,-1],
					[ 1, 1, 0],
					[ 0, 1,-1]
				],[
					[ 0, 1, 0],
					[ 1, 1, 1],
					[-1, 0,-1]
				],[
					[ 0, 1, 0],
					[ 1, 1, 1],
					[ 0, 1, 0]
				],[
					[ 1, 0, 1],
					[ 0, 1, 0],
					[ 1, 0, 1]
				],[
					[ 1, 0,-1],
					[ 0, 1, 1],
					[-1, 1,-1]
				],[
					[-1, 0, 1],
					[ 1, 1, 0],
					[-1, 1,-1]
				],[
					[-1, 1,-1],
					[ 1, 1, 0],
					[-1, 0, 1]
				],[
					[-1, 1,-1],
					[ 0, 1, 1],
					[ 1, 0,-1]
				],[
					[ 1, 0, 1],
					[ 0, 1,-1],
					[ 1,-1,-1]
				],[
					[ 1, 0, 1],
					[-1, 1, 0],
					[-1,-1, 1]
				],[
					[-1,-1, 1],
					[-1, 1, 0],
					[ 1, 0, 1]
				],[
					[ 1,-1,-1],
					[ 0, 1,-1],
					[ 1, 0, 1]
				]
			]

# vonalvégek detektálása
class Endline extends Kernel
	kernel: [
				[
					[-1, 1,-1],
					[ 0, 1, 0],
					[ 0, 0, 0]
				],[
					[ 0,-1, 1],
					[ 0, 1,-1],
					[ 0, 0, 0]
				],[
					[ 0, 0,-1],
					[ 0, 1, 1],
					[ 0, 0,-1]
				],[
					[ 0, 0, 0],
					[ 0, 1,-1],
					[ 0,-1, 1]
				],[
					[ 0, 0, 0],
					[ 0, 1, 0],
					[-1, 1,-1]
				],[
					[ 0, 0, 0],
					[-1, 1, 0],
					[ 1,-1, 0]
				],[
					[-1, 0, 0],
					[ 1, 1, 0],
					[-1, 0, 0]
				],[
					[ 1,-1, 0],
					[-1, 1, 0],
					[ 0, 0, 0]
				]
			]

# dilatációs kernel
class Close extends Kernel
	kernel: [
				[
					[ 1,-1,-1],
					[-1, 0,-1],
					[-1,-1,-1]
				],[
					[-1, 1,-1],
					[-1, 0,-1],
					[-1,-1,-1]
				],[
					[-1,-1, 1],
					[-1, 0,-1],
					[-1,-1,-1]
				],[
					[-1,-1,-1],
					[-1, 0, 1],
					[-1,-1,-1]
				],[
					[-1,-1,-1],
					[-1, 0,-1],
					[-1,-1, 1]
				],[
					[-1,-1,-1],
					[-1, 0,-1],
					[-1, 1,-1]
				],[
					[-1,-1,-1],
					[-1, 0,-1],
					[ 1,-1,-1]
				],[
					[-1,-1,-1],
					[ 1, 0,-1],
					[-1,-1,-1]
				]
			]

# erodációs kernel
class Open extends Kernel
	kernel: [
				[
					[ 0,-1,-1],
					[-1, 1,-1],
					[-1,-1,-1]
				],[
					[-1, 0,-1],
					[-1, 1,-1],
					[-1,-1,-1]
				],[
					[-1,-1, 0],
					[-1, 1,-1],
					[-1,-1,-1]
				],[
					[-1,-1,-1],
					[-1, 1, 0],
					[-1,-1,-1]
				],[
					[-1,-1,-1],
					[-1, 1,-1],
					[-1,-1, 0]
				],[
					[-1,-1,-1],
					[-1, 1,-1],
					[-1, 0,-1]
				],[
					[-1,-1,-1],
					[-1, 1,-1],
					[ 0,-1,-1]
				],[
					[-1,-1,-1],
					[ 0, 1,-1],
					[-1,-1,-1]
				]
			]

# tisztítási kernel
class Clearing extends Kernel
	kernel: [
				[
					[ 0, 0, 0],
					[ 0, 1, 0],
					[ 0, 0, 0]
				]
			]